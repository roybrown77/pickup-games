@using PickupGames.Models
@using PickupGames.Domain.Objects
@model PickupGames.Models.GamesModel
@{
    ViewBag.Title = "Games";
}

<div style="float:left;width:45%">
    <div id="map-canvas" style="width:100%; height:900px; background-color: white"></div>
</div>

<div style="left: 45%;position: absolute;">
    <div>
        @Html.Partial("Search", Model.GameSearchModel)
    </div>

    <div id="gamelist">            
        @foreach (var game in Model.GameListModel)
        {
            <div data-id="@game.Id" style="margin-top:1em">            
                <div>
                    @game.Name          
                </div>
                <div>
                    @game.Sport
                </div>                 
                <div>
                    @game.GameDate
                </div>                                 
                <div>
                    @game.GameTime
                </div>                 
                <div class="location" data-lat="@game.LocationLat" data-lng="@game.LocationLng">
                    @game.Location
                </div>                                                
                <div>
                    @game.PlayerCount
                    <span>players joined</span>
                </div>
                <div>
                    @game.DistanceToCenterLocation
                    <span>from searched or created location</span>
                </div>
                <div>
                    @game.Duration
                </div>
                <div>
                    @game.Status
                </div>
                <div>
                    @game.AgeGroup
                </div>
                <div>
                    @game.Notes
                </div>
                <div>
                    @game.Views
                </div>      
                <button onclick="javascript:joinGame('@game.Id');">Join</button>
                <button onclick="javascript:watchGame('@game.Id');">Watch</button>
                <button>Edit</button>
                <button onclick="javascript:deleteGame('@game.Id');">Delete</button>           
            </div>
        }
    </div>
</div>

<script id="gamesTemplate" type="text/html"> 
    {{#games}} 
    <div data-id={{Id}} style="margin-top:1em">            
        <div>
            {{Name}}          
        </div>
        <div>
            {{Sport}}
        </div>                 
        <div>
            {{GameDate}}
        </div>                                 
        <div>
            {{GameTime}}
        </div>                 
        <div class="location" data-lat={{LocationLat}} data-lng={{LocationLng}}>
            {{Location}}
        </div>                 
        <div>
            {{PlayerCount}}
            <span>players joined</span>
        </div>                 
        <div>
            {{DistanceToCenterLocation}} 
            <span>from searched or created location</span>
        </div>
        <div>
            {{Duration}} 
        </div>
        <div>
            {{Status}} 
        </div>
        <div>
            {{AgeGroup}} 
        </div>
        <div>
            {{Notes}} 
        </div>
        <div>
            {{Views}} 
        </div>       
        <button onclick="javascript:joinGame('{{Id}}');">Join</button>
        <button onclick="javascript:watchGame('{{Id}}');">Watch</button>
        <button>Edit</button>
        <button onclick="javascript:deleteGame('{{Id}}');">Delete</button>          
    </div> 
    {{/games}}   
</script>

<script type="text/javascript">
    function initializeMap() {
        var centerCoordinateLat = parseFloat($('#Location').attr('data-lat'));
        var centerCoordinateLng = parseFloat($('#Location').attr('data-lng'));
        createMap(centerCoordinateLat, centerCoordinateLng);
    }

    function createMap(centerCoordinateLat, centerCoordinateLng) {
        var zoom = 10;

        if ($('#Location').val() == "") {
            zoom = 3;
        }

        var map = new google.maps.Map(document.getElementById('map-canvas'), {
            zoom: zoom,
            center: new google.maps.LatLng(centerCoordinateLat, centerCoordinateLng),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var marker, i;

        var coordinates = [];
        $('.location').each(function (index) {
            coordinates[index] = [parseFloat($(this).attr('data-lat')), parseFloat($(this).attr('data-lng'))];
        });

        $(coordinates).each(function (index, elem) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(elem[0], elem[1]),
                map: map,
                title: 'time to ball!',
                draggable: true,
                animation: google.maps.Animation.DROP
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    if (marker.getAnimation() != null) {
                        marker.setAnimation(null);
                    } else {
                        marker.setAnimation(google.maps.Animation.BOUNCE);
                    }
                }
            })(marker, i));
        });

        var input = (document.getElementById('Location'));
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
    }

   
    function onSearchGamesSuccess(data, status, xhr) {
        if (data.Status == "Success") {            
            var templateWithData = Mustache.to_html($("#gamesTemplate").html(), { games: data.Games });
            $("#gamelist").empty().html(templateWithData);
            createMap(data.SearchLocationLat, data.SearchLocationLng);
        } else {
        }
    }
    
    function joinGame(id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("Join", "Games")",        
            data: { gameId: id },
            success: function (data) {
                if (data.Status == "Success") {
                    alert('joined!');
                } else {
                }
            }
        });
    }

    function watchGame(id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("Watch", "Games")",
            data: { gameId: id },
            success: function (data) {
                if (data.Status == "Success") {
                    alert('watching!');
                } else {
                }
            }
        });
    }
    
    function deleteGame(id) {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("Delete", "Games")",
            data: { gameId: id },
            success: function (data) {
                if (data.Status == "Success") {
                    alert('deleted!');
                } else {
                }
            }
        });
    }

    function validateLatLng(address) {
        var geocoder = new GClientGeocoder();

        var coordinates = geocoder.getLatLng(address, function (point) {
            var latitude = point.y;
            var longitude = point.x;
        });
    }

    google.maps.event.addDomListener(window, 'load', initializeMap);
</script>

