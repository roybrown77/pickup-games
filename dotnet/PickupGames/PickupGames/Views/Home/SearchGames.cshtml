@model PickupGames.Models.GameSearchModel

<label onclick="javascript:toggleSearchGames();" style="font-weight:bold; cursor:pointer">Search Games</label>
<div id="searchgames" class="title" style="display:none">
    @using (Ajax.BeginForm("SearchGames", "Home", FormMethod.Post, new AjaxOptions { OnSuccess = "searchGameSuccess(data, status, xhr)" }, new { id = "searchgameform" }))
    {
        <div class="modal-body">
            @Html.ValidationSummary(false)

            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name)

            @Html.LabelFor(m => m.Sport)
            @Html.TextBoxFor(m => m.Sport)
            
            @Html.LabelFor(m => m.GameDay)
            @Html.EditorFor(m => m.GameDay, "Day")

            @Html.LabelFor(m => m.GameDateStart)
            @Html.EditorFor(m => m.GameDateStart, "Date")
            
            @Html.LabelFor(m => m.GameDateEnd)
            @Html.EditorFor(m => m.GameDateEnd, "Date")

            @Html.LabelFor(m => m.GameTimeStart)
            @Html.EditorFor(m => m.GameTimeStart, "Time")
            
            @Html.LabelFor(m => m.GameTimeEnd)
            @Html.EditorFor(m => m.GameTimeEnd, "Time")
                    
            @Html.LabelFor(m => m.SearchLocation)
            @Html.TextBoxFor(m => m.SearchLocation, new { style = "width:30em;" })

            @Html.LabelFor(m => m.Radius)
            @Html.TextBoxFor(m => m.Radius)
            
            @Html.LabelFor(m => m.PlayerCount)
            @Html.TextBoxFor(m => m.PlayerCount)
            
            @Html.LabelFor(m => m.Views)
            @Html.TextBoxFor(m => m.Views)        
        </div>
        <div>
            <input type="submit" class="btn btn-large btn-primary" value="Search!"/>
        </div>
    }
</div>

<script type="text/javascript">
    function toggleSearchGames() {
        $('#searchgames').toggle(500);
    };       
</script>